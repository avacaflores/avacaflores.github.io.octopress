<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Por puro gusto]]></title>
  <link href="http://avacaflores.github.io/atom.xml" rel="self"/>
  <link href="http://avacaflores.github.io/"/>
  <updated>2014-05-23T21:40:13-04:00</updated>
  <id>http://avacaflores.github.io/</id>
  <author>
    <name><![CDATA[Alfonso Vacaflores]]></name>
    <email><![CDATA[avacaflores@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scopes in Rails 4]]></title>
    <link href="http://avacaflores.github.io/blog/2014/05/23/scopes-en-rails-4/"/>
    <updated>2014-05-23T00:12:02-04:00</updated>
    <id>http://avacaflores.github.io/blog/2014/05/23/scopes-en-rails-4</id>
    <content type="html"><![CDATA[<p>Rails es un framework muy flexible, existen muchas tareas que se las pueden hacer de diferentes maneras, sin embargo esta flexibilidad se ve empañada por la confusión que existe en internet. Cada version de Rails incorpora nuevos comandos y retira otros, también se puede ver que la sintaxis de los comandos ha ido cambiando en cada versión.</p>

<p>En este post me quiero referir específicamente a los <strong>scopes</strong> y su sintaxis en Rails 4, describiré la sintaxis que me parece mas clara y sencilla.</p>

<p>Primeramente definamos los modelos de ejemplo</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Product</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:type</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Type</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many_</span> <span class="ss">:products</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Así mismo, asumamos que cada modelo cuenta con un campo <code>title</code></p>

<h2>scope estático</h2>

<p>Serán aquellos que actúan sobre un modelo y que tienen una condición fija, bajo estas premisas, estos podrían ser scopes definidos en los modelo <code>Product</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:fixedtitle</span><span class="p">,</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">:title</span> <span class="o">=&gt;</span> <span class="s1">&#39;computer&#39;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Podemos llamar el scope con el siguiente comando <code>Product.fixedtitle</code> que producira el seguinete resultado:</p>

<pre><code>SELECT "products".* 
FROM "products"  
WHERE "products"."title" = 'computer'
</code></pre>

<p>Otro ejemplo de scope estático podría ser:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:titlecontains</span><span class="p">,</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;title LIKE &#39;%p%&#39;&quot;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Que lo llamariamos con el siguiente comando <code>Product.titlecontains</code> y producira el siguiente resultado:</p>

<pre><code>SELECT "products".* 
FROM "products"  
WHERE (title LIKE '%p%')
</code></pre>

<p>Incluso podríamos usar ambos scopes en la misma consulta <code>Product.fixedtitle.titlecontains</code></p>

<pre><code>SELECT "products".* 
FROM "products"  
WHERE "products"."title" = 'computer' AND (title LIKE '%a%')
</code></pre>

<h2>scope variable</h2>

<p>En este caso lo que esperamos es que el scope reciba una variable dinámicamente, para lograrlo debemos usar <code>|variable|</code> para recibir el valor:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:variabletitle</span><span class="p">,</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">term</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="s2">&quot;title LIKE &#39;%</span><span class="si">#{</span><span class="n">term</span><span class="si">}</span><span class="s2">%&#39;&quot;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deberemos pasar el valor en la llamada al scope de la siguiente manera <code>Product.variabletitle('compu')</code> que producira el siguiente resultado:</p>

<pre><code>SELECT "products".* 
FROM "products"  
WHERE (title LIKE '%compu%')
</code></pre>

<h2>scope variable con dos modelos</h2>

<p>Por ultimo, el caso mas complejo que me tomo varias horas de investigación y pruebas y que me empujo a escribir este post. Como podrán imaginar necesitamos usaremos un scope variable y también usaremos <strong>joins</strong> para enlazar al segundo modelo</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:bytype</span><span class="p">,</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">type_name</span><span class="o">|</span> <span class="n">joins</span><span class="p">(</span><span class="ss">:type</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="err">‘</span><span class="n">type</span><span class="o">.</span><span class="n">title</span><span class="err">’</span> <span class="o">=&gt;</span> <span class="n">type_name</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Llamaremos a este scope con <code>Product.bytype('electronics')</code> y producira el siguiente resultado:</p>

<pre><code>SELECT "products".* 
FROM "products" INNER JOIN "types" ON "types"."id" = "products"."type_id" 
WHERE "types"."title" = 'electronics'
</code></pre>

<p><strong>Scopes</strong> en Rails es un tema bastante amplio sobre el cual hay mucho material (el cual no necesariamente es vigente ni). Esta propuesta es sumamente simple pero 100% funcional y puede ser extendida siguiendo el mismo patron.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hacking Octopress]]></title>
    <link href="http://avacaflores.github.io/blog/2014/05/16/hacking-octopress/"/>
    <updated>2014-05-16T23:12:02-04:00</updated>
    <id>http://avacaflores.github.io/blog/2014/05/16/hacking-octopress</id>
    <content type="html"><![CDATA[<p>Octopress es un framework para páginas estáticas basado en Jekyll, sin lugar a duda es una excelente y divertida manera de publicar un blog o página personal. Como su eslogan lo dice &ldquo;A blogging framework for hackers&rdquo; necesita de ciertos conocimiento básicos de Ruby y su servidor Rack. Pero por sobre todas las cosas necesita que perdamos el miedo a la línea de comandos ya que todo el trabajo se debe hacer desde un editor de textos normal y comandos en la consola.</p>

<p>Octopress ofrece un template básico muy bien logrado que representa un gran avance sobre Jekyll, adicionalmente existen muchos templates de terceros que son muy fáciles de utilizar, sin embargo,  por el momento he decidido mantenerme con el template estándar y sólo hacer algunos ajustes básicos. De todos estos ajustes considero que vale la pena comentar sobre los siguientes:</p>

<h2>Cambio de color de background de los bloques de código</h2>

<p>Por defecto Octopress utiliza Solarized el cual tiene 2 templates &ldquo;dark&rdquo; y &ldquo;light&rdquo;, el primero es muy oscuro y el segundo es un color entre amarillo que personalmente no es de mi agrado. Para cambiar este color simplemente hay editar el archivo <code>/sass/custom/_colors.scss</code> y quitar el comentario a <code>$solarized</code> y a las variables <code>$base2</code> y <code>base3</code>, a las cuales podemos cambiar los valores deseados</p>

<figure class='code'><figcaption><span>/sass/custom/_colors.scss </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nv">$solarized</span><span class="o">:</span> <span class="n">light</span><span class="p">;</span>
</span><span class='line'><span class="nv">$base2</span><span class="o">:</span>             <span class="mh">#dddddd</span><span class="p">;</span>
</span><span class='line'><span class="nv">$base3</span><span class="o">:</span>             <span class="mh">#f0f0f0</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>El folder <code>/sass/custom</code> contiene muchas sugerencias para el cambio de estilo en Octopress, tomen su tiempo y vaya experimentando. Tengan en cuenta que todo cambio  con CSS debe ser hecho en el archivo <code>sass/custom/_styles.scss</code> que es el último en cargarse.</p>

<h2>Traducción al español</h2>

<p>Octopress no cuenta con soporte para <a href="http://es.wikipedia.org/wiki/I18n">i18n</a> por lo que hay que hacer un trabajo manual de reemplazo de todas las etiquetas, los principales archivos a traducir se encuentran en los folders:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/source/custom
</span><span class='line'>/source/post
</span><span class='line'>/source/_layout</span></code></pre></td></tr></table></div></figure>


<p>En cuanto a la traducción, el cambio mas complicado es el de las fechas, para lo cual use como modelo el siguiente código que encontré en <a href="https://github.com/vigo/octopress">github</a></p>

<p>Para realizar el cambio inicialmente debemos crear los arrays con los valores de los días y meses en español, esto los debemos adicionar el archivo <code>/plugins/date.rb</code></p>

<figure class='code'><figcaption><span>/plugins/date.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">module</span> <span class="nn">Octopress</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Date</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Days and Months in spanish</span>
</span><span class='line'>    <span class="no">MONTHNAMES_ES</span> <span class="o">=</span> <span class="o">[</span><span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Enero&quot;</span><span class="p">,</span> <span class="s2">&quot;Febrero&quot;</span><span class="p">,</span> <span class="s2">&quot;Marzo&quot;</span><span class="p">,</span> <span class="s2">&quot;Abril&quot;</span><span class="p">,</span> <span class="s2">&quot;Mayo&quot;</span><span class="p">,</span> <span class="s2">&quot;Junio&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Julio&quot;</span><span class="p">,</span> <span class="s2">&quot;Agosto&quot;</span><span class="p">,</span> <span class="s2">&quot;Septiembre&quot;</span><span class="p">,</span> <span class="s2">&quot;Octubre&quot;</span><span class="p">,</span> <span class="s2">&quot;Noviembre&quot;</span><span class="p">,</span> <span class="s2">&quot;Diciembre&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="no">ABBR_MONTHNAMES_ES</span> <span class="o">=</span> <span class="o">[</span><span class="kp">nil</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Ene&quot;</span><span class="p">,</span> <span class="s2">&quot;Feb&quot;</span><span class="p">,</span> <span class="s2">&quot;Mar&quot;</span><span class="p">,</span> <span class="s2">&quot;Abr&quot;</span><span class="p">,</span> <span class="s2">&quot;May&quot;</span><span class="p">,</span> <span class="s2">&quot;Jun&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Jul&quot;</span><span class="p">,</span> <span class="s2">&quot;Ago&quot;</span><span class="p">,</span> <span class="s2">&quot;Sep&quot;</span><span class="p">,</span> <span class="s2">&quot;Oct&quot;</span><span class="p">,</span> <span class="s2">&quot;Nov&quot;</span><span class="p">,</span> <span class="s2">&quot;Dic&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="no">DAYNAMES_ES</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Domingo&quot;</span><span class="p">,</span> <span class="s2">&quot;Lunes&quot;</span><span class="p">,</span> <span class="s2">&quot;Martes&quot;</span><span class="p">,</span> <span class="s2">&quot;Mi&amp;eacute;rcoles&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;Jueves&quot;</span><span class="p">,</span> <span class="s2">&quot;Viernes&quot;</span><span class="p">,</span> <span class="s2">&quot;S&amp;aacute;bado&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="no">ABBR_DAYNAMES_ES</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Dom&quot;</span><span class="p">,</span> <span class="s2">&quot;Lun&quot;</span><span class="p">,</span> <span class="s2">&quot;Mar&quot;</span><span class="p">,</span> <span class="s2">&quot;Mi&amp;eacute;&quot;</span><span class="p">,</span>
</span><span class='line'>       <span class="s2">&quot;Jue&quot;</span><span class="p">,</span> <span class="s2">&quot;Vie&quot;</span><span class="p">,</span> <span class="s2">&quot;S&amp;aacute;b&quot;</span><span class="o">]</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el mismo archivo localizar la función <code>format_date</code></p>

<figure class='code'><figcaption><span>/plugins/date.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">format_date</span><span class="p">(</span><span class="n">date</span><span class="p">,</span> <span class="nb">format</span><span class="p">)</span>
</span><span class='line'>      <span class="n">date</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">format</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="nb">format</span><span class="o">.</span><span class="n">empty?</span> <span class="o">||</span> <span class="nb">format</span> <span class="o">==</span> <span class="s2">&quot;ordinal&quot;</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="n">ordinalize</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="nb">format</span><span class="p">)</span>
</span><span class='line'>        <span class="n">date_formatted</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/%o/</span><span class="p">,</span> <span class="n">ordinal</span><span class="p">(</span><span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%e&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_i</span><span class="p">))</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">date_formatted</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y reemplazarla por la siguiente función:</p>

<figure class='code'><figcaption><span>/plugins/date.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">format_date</span><span class="p">(</span><span class="n">date</span><span class="p">,</span> <span class="nb">format</span><span class="p">)</span>
</span><span class='line'>      <span class="n">date</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nb">format</span><span class="o">.</span><span class="n">nil?</span> <span class="o">||</span> <span class="nb">format</span><span class="o">.</span><span class="n">empty?</span> <span class="o">||</span> <span class="nb">format</span> <span class="o">==</span> <span class="s2">&quot;ordinal&quot;</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="n">ordinalize</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="nb">format</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/%a/</span><span class="p">,</span> <span class="no">ABBR_DAYNAMES_ES</span><span class="o">[</span><span class="n">date</span><span class="o">.</span><span class="n">wday</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="n">date_formatted</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/%A/</span><span class="p">,</span> <span class="no">DAYNAMES_ES</span><span class="o">[</span><span class="n">date</span><span class="o">.</span><span class="n">wday</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="n">date_formatted</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/%b/</span><span class="p">,</span> <span class="no">ABBR_MONTHNAMES_ES</span><span class="o">[</span><span class="n">date</span><span class="o">.</span><span class="n">mon</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="n">date_formatted</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/%B/</span><span class="p">,</span> <span class="no">MONTHNAMES_ES</span><span class="o">[</span><span class="n">date</span><span class="o">.</span><span class="n">mon</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="n">date_formatted</span> <span class="o">=</span> <span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="n">date_formatted</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">date_formatted</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Después de este procedimiento todas las fechas de los posts estarán disponibles en español. Así mismo es posible cambiar el formato de presentación en el archivo <code>/_config.yml</code> por ejemplo utilizando la siguiente plantilla:</p>

<figure class='code'><figcaption><span>&#8216;/_config.yml&#8217; </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">date_format</span><span class="p-Indicator">:</span> <span class="s">&quot;%d</span><span class="nv"> </span><span class="s">%B</span><span class="nv"> </span><span class="s">%Y&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Esta implementación tiene una falencia que se hace evidente en el la página del Archivo de posts, por el momento mi solución es la presentar el mes en formato numérico cambiando las siguientes líneas en el archivo <code>/source/post/archive_post.html</code></p>

<figure class='code'><figcaption><span>/source/post/archive_post.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>...
</span><span class='line'><span class="nt">&lt;time</span> <span class="na">datetime=</span><span class="s">&quot;{{ post.date | datetime | date_to_xmlschema }}&quot;</span> <span class="na">pubdate</span><span class="nt">&gt;</span>{{ post.date | date: &quot;<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&#39;month&#39;</span><span class="nt">&gt;</span>%m<span class="nt">&lt;/span&gt;</span>/<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&#39;day&#39;</span><span class="nt">&gt;</span>%d<span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&#39;year&#39;</span><span class="nt">&gt;</span>%Y<span class="nt">&lt;/span&gt;</span>&quot;}}<span class="nt">&lt;/time&gt;</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>Y estos son los resultados de estas modificaciones:</p>

<p><img src="http://avacaflores.github.io/images/blog/blog.png" width="700"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Archivos YAML para guardar parámetros en Rails]]></title>
    <link href="http://avacaflores.github.io/blog/2014/05/13/archivos-yaml-en-rails/"/>
    <updated>2014-05-13T00:12:02-04:00</updated>
    <id>http://avacaflores.github.io/blog/2014/05/13/archivos-yaml-en-rails</id>
    <content type="html"><![CDATA[<p>Toda aplicación tiene parámetros de configuración que conviene que estén parametrizados para evitar repetición en el código y para tener la facilidad de cambiar los mismos en un solo lugar. Lo que en la herga de Rails diríamos: para estar <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY (Don&rsquo;t Repeat Yourself)</a></p>

<p>Si bien en una aplicación en Rails se podrían crear variables globales la mejor opción a futuro es la de crear un modelo que guarde toda esta información en la base de datos. Sin embargo esto implicaría crear todas las pantallas y controladores de administración que muchas veces no justifica porque estos valores no cambian con frecuencia.</p>

<p>Como una solución intermedia al problema se podría usar archivos <strong>YAML</strong>, similares a los que se usa en Rails para la configuración de la base de datos <code>database.yml</code></p>

<p>Primeramente crearemos el archivo <code>yml</code> que contendrá 3 keys con nuestros parámetros de configuración</p>

<figure class='code'><figcaption><span>/config/config.yml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">store_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">‘myStore&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">store_phone</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">‘1-212-328-3212‘</span>
</span><span class='line'><span class="l-Scalar-Plain">store_email</span><span class="p-Indicator">:</span> <span class="s">&#39;mystore@gmail.com&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Luego es necesario cargar este archivo al iniciar la aplicación por ejemplo en el <code>/config/application.rb</code></p>

<figure class='code'><figcaption><span>/config/application.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="no">CONFIG</span> <span class="o">=</span> <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s1">&#39;../config.yml&#39;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)))</span>
</span><span class='line'><span class="no">CONFIG</span><span class="o">.</span><span class="n">symbolize_keys!</span>
</span></code></pre></td></tr></table></div></figure>


<p>La primer línea lee el archivo <code>config.yml</code> y lo convierte en un <strong>hash</strong> que será guardado en la variable <code>CONFIG</code>. La segunda línea habilitará este <strong>hash</strong> para que pueda ser llamado utilizando símbolos como veremos a continuación.</p>

<p>Desde una vista podremos llamar a nuestros parámetros de la siguiente manera:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%=</span> <span class="no">CONFIG</span><span class="o">[</span><span class="ss">:store_name</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="no">CONFIG</span><span class="o">[</span><span class="ss">:store_phone</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%=</span> <span class="no">CONFIG</span><span class="o">[</span><span class="ss">:store_email</span><span class="o">]</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Esta es una manera muy sencilla y limpia de usar archivos <strong>YAML</strong> para guardar parámetros de configuración, la cual puede ser extendida para muchos otros usos. Para más información de la sintaxis de los archivos YAML visitar el sitio offical <a href="http://www.yaml.org">http://www.yaml.org</a> o la página de Wikipedia <a href="http://en.wikipedia.org/wiki/YAML">YAML</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sobre este blog]]></title>
    <link href="http://avacaflores.github.io/blog/2014/05/09/sobre-este-blog/"/>
    <updated>2014-05-09T18:42:44-04:00</updated>
    <id>http://avacaflores.github.io/blog/2014/05/09/sobre-este-blog</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://avacaflores.github.io/images/blog/blogging.jpg" width="400">
Después de muchos años y de algunos intentos fallidos he decido iniciar este blog dedicado a la tecnología. Como su título lo dice, este blog es <strong>&ldquo;Por puro gusto&rdquo;</strong> a esta pasión que la he reencontrado después de muchos años. Como buen <a href="http://es.wikipedia.org/wiki/Geek">geek</a> esto de escribir no es lo mío pero estoy confiado que podré plasmar algo de mi conocimiento en estos posts.</p>

<p>Mi principal objetivo es el de dejar de usar &ldquo;notepad&rdquo; para tomar notas de cosas interesantes que aprendo, de links a sitios que tienen contenidos que me sirve e intentaré poner todo esa información en este sitio. De paso si esta información es de provecho para alguien más me dará mucho gusto poder aportar en algo.</p>

<p>Como ya se habrán dado cuenta en estas pocas líneas, este blog será escrito en <a href="http://es.wikipedia.org/wiki/Spanglish">spanglish</a>, no es lo más me gusta pero el mundo de la tecnología esta dominado por el inglés. Un 99% de las veces el intentar traducir términos que se usan comúnmente en inglés resulta en un texto que es totalmente extraño y por ende este deja de ser útil.</p>

<p>Bienvenidos al blog, espero lo disfruten como yo.</p>
]]></content>
  </entry>
  
</feed>
